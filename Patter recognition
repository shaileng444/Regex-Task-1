Task 1 - Pattern Assignement -1 Referral ID : AIRSS1170 Full name : shailendra shahsikant gadhave

In [35]:
rows = 6
# if you want user to enter a number, uncomment the below line
rows = int(input('Enter the number of rows'))
# outer loop
for i in range(rows):
    # nested loop
    for j in range(i):
        # display number
        print(i, end=' ')
    # new line after each row
    print('')
Enter the number of rows6

1 
2 2 
3 3 3 
4 4 4 4 
5 5 5 5 5 
In [36]:
rows = 6
# if you want user to enter a number, uncomment the below line
#rows = int(input('Enter the number of rows'))
# outer loop
for i in range(rows):
    # nested loop
    for j in range(i):
        # display number
        print(j, end=' ')
    # new line after each row
    print('')
0 
0 1 
0 1 2 
0 1 2 3 
0 1 2 3 4 
In [37]:
rows = 5
for i in range(1, rows + 1):
    for j in range(1, i + 1):
        print(j, end=' ')
    print('')
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5 
In [39]:
rows = 5
b = 0
# reverse for loop from 5 to 0
for i in range(rows, 0, -1):
    b += 1
    for j in range(1, i + 1):
        print(b, end=' ')
    print('\r')
1 1 1 1 1 
2 2 2 2 
3 3 3 
4 4 
5 
In [40]:
# inverterd pattern with same digit
rows = 5
num = rows
#reverse for  loop
for i in range(rows, 0, -1):
# nested loop
    for j in range(0, i):
        print(num, end=' ')
    print('\r')
5 5 5 5 5 
5 5 5 5 
5 5 5 
5 5 
5 
In [7]:
# half inverted patten with numbers
rows = 5
for i in range(rows, 0, -1):
    for j in range(0, i + 1):
         print(j, end = ' ' )
    print('\r')
0 1 2 3 4 5 
0 1 2 3 4 
0 1 2 3 
0 1 2 
0 1 
In [41]:
#alterante number pattern using while loop 
rows = 5 
i = 1
while i <= rows:
    j = 1
    while j <= i:
        print((i * 2 - 1), end = ' ')
        j = j + 1
    i = i + 1
    print ()
1 
3 3 
5 5 5 
7 7 7 7 
9 9 9 9 9 
In [42]:
#invered pattern of decending numbers 
rows = 5
# reverse loop
for i in range(rows, 0, -1):
    num = i
    for j in range(0, i):
        print(num, end=' ')
    print("\r")
5 5 5 5 5 
4 4 4 4 
3 3 3 
2 2 
1 
In [43]:
# reverse pyramid of numbers 
rows = 6
for row in range(1, rows):
    for column in range(row, 0, -1):
        print(column, end = ' ')
    print(' ')
1  
2 1  
3 2 1  
4 3 2 1  
5 4 3 2 1  
In [44]:
# reverse number pattern 10 to 1
start = 1
stop = 2
current_num = stop
for row in range(2, 6):
    for col in range(start, stop):
        current_num -= 1
        print(current_num, end=' ')
    print("")
    start = stop
    stop += row
    current_num = stop
1 
3 2 
6 5 4 
10 9 8 7 
In [45]:
# traingle pattern with numbers
rows = 6
for i in range(1, rows):
    num = 1
    for j in range(rows, 0, -1):
        if j > i:
            print(" ", end=' ')
        else:
            print(num, end=' ')
            num += 1
    print(" ")
          1  
        1 2  
      1 2 3  
    1 2 3 4  
  1 2 3 4 5  
In [46]:
rows = 8
for i in range(1, rows + 1):
    for j in range(1, i - 1):
        print(j, end = ' ')
    for j in range(i - 1, 0, -1):
        print(j, end = ' ')
    print()
1 
1 2 1 
1 2 3 2 1 
1 2 3 4 3 2 1 
1 2 3 4 5 4 3 2 1 
1 2 3 4 5 6 5 4 3 2 1 
1 2 3 4 5 6 7 6 5 4 3 2 1 
In [47]:
# pascal traingle pattern with numbers 
def print_pascal_triangle(size):
    for i in range(0, size):
        for j in range(0, i + 1):
            print(decide_number(i, j), end=" ")
        print()
def decide_number(n, k):
    num = 1
    if k > n - k:
        k = n - k
    for i in range(0, k):
        num = num * (n - i)
        num = num // (i + 1)
    return num

# set rows
rows = 7
print_pascal_triangle(rows)
1 
1 1 
1 2 1 
1 3 3 1 
1 4 6 4 1 
1 5 10 10 5 1 
1 6 15 20 15 6 1 
In [48]:
# square pattern numbers 
rows = 5
for i in range(1, rows + 1):
    for j in range(1, rows + 1):
        if j <= i:
            print(i, end=' ')
        else:
            print(j, end=' ')
    print()
1 2 3 4 5 
2 2 3 4 5 
3 3 3 4 5 
4 4 4 4 5 
5 5 5 5 5 
In [49]:
# multiplication pattern 
rows = 8
# rows = int(input("Enter the number of rows "))
for i in range(1, rows + 1):
    for j in range(1, i + 1):
        # multiplication current column and row
        square = i * j
        print(i * j, end='  ')
    print()
1  
2  4  
3  6  9  
4  8  12  16  
5  10  15  20  25  
6  12  18  24  30  36  
7  14  21  28  35  42  49  
8  16  24  32  40  48  56  64  
In [50]:
# Multiplication table pattern 
rows = 9
for i in range(0, rows):
    for j in range(1, i + 1):
        print(i * j, end=' ')
    print()
1 
2 4 
3 6 9 
4 8 12 16 
5 10 15 20 25 
6 12 18 24 30 36 
7 14 21 28 35 42 49 
8 16 24 32 40 48 56 64 
In [20]:
rows = 6
for i in range(0, rows):
    for j in range(rows - 1, i, -1):
        print(j, '', end='')
    for l in range(i):
        print('', end='')
    for k in range(i + 1, rows):
        print(k, '', end='')
    print('\n')
5 4 3 2 1 1 2 3 4 5 

5 4 3 2 2 3 4 5 

5 4 3 3 4 5 

5 4 4 5 

5 5 



In [51]:
# simple half pyramid with stars 
# number of rows
rows = 5
for i in range(0, rows):
    # nested loop for each column
    for j in range(0, i + 1):
        # print star
        print("*", end=' ')
    # new line after each row
    print("\r")
* 
* * 
* * * 
* * * * 
* * * * * 
In [52]:
# right traingle pyramid
# number of rows
rows = 5
k = 2 * rows - 2
for i in range(0, rows):
    # process each column
    for j in range(0, k):
        # print space in pyramid
        print(end=" ")
    k = k - 2
    for j in range(0, i + 1):
        # display star
        print("* ", end="")
    print("")
        * 
      * * 
    * * * 
  * * * * 
* * * * * 
In [53]:
rows = 5
for j in range(1, rows+1):
    print("* " * j)
* 
* * 
* * * 
* * * * 
* * * * * 
In [54]:
# half pyramid facing down 
rows = 5
for i in range(rows + 1, 0, -1):
    # nested reverse loop
    for j in range(0, i - 1):
        # display star
        print("*", end=' ')
    print(" ")
* * * * *  
* * * *  
* * *  
* *  
*  
 
In [55]:
# full pyramid facing down 
rows = 5
k = 2 * rows - 2
for i in range(rows, -1, -1):
    for j in range(k, 0, -1):
        print(end=' ')
    k = k + 1
    for j in range(0, i + 1):
        print('*', end=' ')
    print('')
        * * * * * * 
         * * * * * 
          * * * * 
           * * * 
            * * 
             * 
In [56]:
# mirror pattern 
rows = 5
i = rows
while i >= 1:
    j = rows
    while j > i:
        # display space
        print(' ', end=' ')
        j -= 1
    k = 1
    while k <= i:
        print('*', end=' ')
        k += 1
    print()
    i -= 1
* * * * * 
  * * * * 
    * * * 
      * * 
        * 
In [57]:
# equilateral traingle 
size = 8
s = (2 * size) - 2
for i in range(0, size):
    for j in range(0, s):
        print(end = ' ')
    s = s - 1 # decrementing s after each loop
    for j in range(0, i + 1):
        # printing full Triangle pyramid using stars
        print('*', end = ' ')
    print(' ')
              *  
             * *  
            * * *  
           * * * *  
          * * * * *  
         * * * * * *  
        * * * * * * *  
       * * * * * * * *  
In [58]:
# 2 pyramid of stars
rows = 6
for i in range(0, rows):
    for j in range(0, i + 1):
        print("*", end=' ')
    print(" ")
print(" ")
for i in range(rows + 1, 0, -1):
    for j in range(0, i - 1):
        print("*", end=' ')
    print(" ")
*  
* *  
* * *  
* * * *  
* * * * *  
* * * * * *  
 
* * * * * *  
* * * * *  
* * * *  
* * *  
* *  
*  
 
In [59]:
# right arrow pattern
rows = 5
for i in range(0, rows):
    for j in range(0, i + 1):
        print("*", end=' ')
    print("\r")
for i in range(rows, 0, -1):
    for j in range(0, i - 1):
        print("*", end=' ')
    print("\r")
* 
* * 
* * * 
* * * * 
* * * * * 
* * * * 
* * * 
* * 
* 

In [60]:
# left arrow pattern
rows = 5
i = 1
while i <= rows:
    j = i
    while j < rows:
        # display space
        print(' ', end=' ')
        j += 1
    k = 1
    while k <= i:
        print('*', end=' ')
        k += 1
    print()
    i += 1
i = rows
while i >= 1:
    j = i
    while j <= rows:
        print(' ', end=' ')
        j += 1
    k = 1
    while k < i:
        print('*', end=' ')
        k += 1
    print('')
    i -= 1
        * 
      * * 
    * * * 
  * * * * 
* * * * * 
  * * * * 
    * * * 
      * * 
        * 
          
In [61]:
# sandglass pattern
rows = 5
i = 0
while i <= rows - 1:
    j = 0
    while j < i:
        # display space
        print('', end=' ')
        j += 1
    k = i
    while k <= rows - 1:
        print('*', end=' ')
        k += 1
    print()
    i += 1

i = rows - 1
while i >= 0:
    j = 0
    while j < i:
        print('', end=' ')
        j += 1
    k = i
    while k <= rows - 1:
        print('*', end=' ')
        k += 1
    print('')
    i -= 1
* * * * * 
 * * * * 
  * * * 
   * * 
    * 
    * 
   * * 
  * * * 
 * * * * 
* * * * * 
In [62]:
# pant style pattern
rows = 14
print("*" * rows, end="\n")
i = (rows // 2) - 1
j = 2
while i != 0:
    while j <= (rows - 2):
        print("*" * i, end="")
        print("_" * j, end="")
        print("*" * i, end="\n")
        i = i - 1
        j = j + 2
**************
******__******
*****____*****
****______****
***________***
**__________**
*____________*
In [ ]:
